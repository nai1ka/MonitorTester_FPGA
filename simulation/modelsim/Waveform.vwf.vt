// Copyright (C) 2022  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "11/30/2022 00:40:18"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Monitor_Tester
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Monitor_Tester_vlg_vec_tst();
// constants                                           
// general purpose registers
reg btn_next;
reg btn_prev;
reg clock50MHz;
reg [2:0] switches;
// wires                                               
wire [3:0] blue;
wire [3:0] green;
wire hsync;
wire [3:0] red;
wire testLED;
wire vsync;

// assign statements (if any)                          
Monitor_Tester i1 (
// port map - connection between master ports and signals/registers   
	.blue(blue),
	.btn_next(btn_next),
	.btn_prev(btn_prev),
	.clock50MHz(clock50MHz),
	.green(green),
	.hsync(hsync),
	.red(red),
	.switches(switches),
	.testLED(testLED),
	.vsync(vsync)
);
initial 
begin 
#1000000 $stop;
end 

// btn_next
initial
begin
	btn_next = 1'b0;
end 

// btn_prev
initial
begin
	btn_prev = 1'b0;
end 

// clock50MHz
initial
begin
	clock50MHz = 1'b0;
end 
// switches[ 2 ]
initial
begin
	switches[2] = 1'b0;
end 
// switches[ 1 ]
initial
begin
	switches[1] = 1'b0;
end 
// switches[ 0 ]
initial
begin
	switches[0] = 1'b0;
end 
endmodule

